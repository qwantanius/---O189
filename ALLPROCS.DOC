
LIST OF ALL REG, MACRO and STACK PROCEDURES OF SPHINX C-- as of 28 Nov 1993
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

void ABORT();
void ALLOCBESTFIT();    // defined in DOS.H--
void ALLOCFIRSTFIT();   // defined in DOS.H--
void ALLOCLASTFIT();    // defined in DOS.H--
word ALLOCSTRATEGY();   // defined in DOS.H--
void andpixel19(x,y,colour);
void ANDPIXEL19( ,x,colour,y);
word appendfile(filename,bufsegment,bufoffset,bytes);  // defined in FILE.H--

void bar19(x,y,xsize,ysize,colour);   // defined in VGA.H--
void BEEP();      // defined in WRITE.H--
word BIOSEKEYCHECK();       // defined in KEYCODES.H--
word BIOSEREADKEY();        // defined in KEYCODES.H--
word BIOSKEYCHECK();        // defined in KEYCODES.H--
void BIOSPUSHKEY(keycode);  // defined in KEYCODES.H--
word BIOSREADKEY();         // defined in KEYCODES.H--
byte BIOSSHIFT();           // defined in KEYCODES.H--
void BLANKVGA(); 
void box19(x,y,xsize,ysize,colour);   // defined in VGA.H--
void BYTETODIGITS(number,stringloc);
void BYTETOHEX(number,stringloc);

void CLEARSCREEN0();
void CLEARSCREEN1();
void CLEARSCREEN2();
void CLEARSCREEN3();
void CLEARSCREEN4();
void CLEARSCREEN5();
void CLEARSCREEN6();
void CLEARSCREEN7();
void CLEARSCREEN17();
void CLEARSCREEN19();         // defined in VGA.H--
void CLEARSCREEN_320();    // description to do
void CLEARSCREEN_640();    // description to do
void CLEARWINDOW( ,attribute,upperleftloc,lowerrightloc);
void CLICKOFF();
void CLICKON();
word close(filehandle);   // defined in FILE.H--
void COLDBOOT();
void copybackwardfar(destseg,destoff,sourceseg,sourceoff,bytes);  // description do
void COPYBACKWARDFAR(destseg,destoff,sourceseg,sourceoff,bytes);  // description do
void copybackwardfard(destseg,destoff,sourceseg,sourceoff,words);  // description do
void COPYBACKWARDFARD(destseg,destoff,sourceseg,sourceoff,words);  // description do
void copybackwardfarw(destseg,destoff,sourceseg,sourceoff,dwords);  // description do
void COPYBACKWARDFARW(destseg,destoff,sourceseg,sourceoff,dwords);  // description do
void copybackwardnear(destoffset,sourceoffset,bytes);   // description do 
void COPYBACKWARDNEAR(destoffset,sourceoffset,bytes);   // description do 
void copybackwardneard(destoffset,sourceoffset,dwords); // description do
void COPYBACKWARDNEARD(destoffset,sourceoffset,dwords); // description do
void copybackwardnearw(destoffset,sourceoffset,words);  // description do
void COPYBACKWARDNEARW(destoffset,sourceoffset,words);  // description do
void copyfar(destseg,destoff,sourceseg,sourceoff,bytes);  // description do
void COPYFAR(destseg,destoff,sourceseg,sourceoff,bytes);  // description do
void copyfard(destseg,destoff,sourceseg,sourceoff,words);  // description do
void COPYFARD(destseg,destoff,sourceseg,sourceoff,words);  // description do
void copyfarw(destseg,destoff,sourceseg,sourceoff,dwords);  // description do
void COPYFARW(destseg,destoff,sourceseg,sourceoff,dwords);  // description do
void copynear(destoffset,sourceoffset,bytes);   // description do 
void COPYNEAR(destoffset,sourceoffset,bytes);   // description do 
void copyneard(destoffset,sourceoffset,dwords); // description do
void COPYNEARD(destoffset,sourceoffset,dwords); // description do
void copynearw(destoffset,sourceoffset,words);  // description do
void COPYNEARW(destoffset,sourceoffset,words);  // description do
word create(filenameoffset,attribute);  // defined in FILE.H--

void DELAY(time);
void DISABLE();
void DOSGETDATE(??);                //description to do
void DOSGETTIME(??);                //description to do
void DOSWRITESTRING( , , ,stringloc);

void EATKEY();
void ENABLE();
     ENVSTR(environmentstring);    // description to do
void EOI();
void EXIT(byte code);

word FCLOSE( ,handle);
word FCREATE( , ,attribute,filename);
word FDELETE( , , ,filename);
??   FHANDLE(??);                  //description to do     
word FINDFIRSTFILE( , ,attribute,pathname);
word FREEMEM(segmentaddress);    // description to do
word FINDNEXTFILE();
word FHANDLE( ,handle);
word FOPEN(mode, , ,filename);
word FREAD( ,handle,count,buffer);
word FWRITE( ,handle,count,buffer);

byte GETBORDERCOLOR();
byte GETCH();
byte GETCHE();
??   GETCOLORPAGESTATE(??)         //description to do
word GETCONFIG();
byte GETCPU();
??   GETDEFAULTDRIVE();           //description to do
??   GETDEFAULTINFO();            //description to do
word GETDOSVERSION();
void getimage19(x,y,xsize,ysize,imagebuf_segment,imagebuf_offset);   // defined in VGA.H--
void GETINTVECT(addressbuf,intnum);
word GETMEM(paragraphsize);   
word GETMEMSIZE();
word GETMOUSEPRESS( ,button);     // defined in MOUSE.H--
word GETMOUSERELEASE( ,button);   // defined in MOUSE.H--
void GETMOUSEXY();                // defined in MOUSE.H--  
void GETPIXEL( ,page,x,y);
byte getpixel19(x,y);            // defined in VGA.H--
byte GETPIXEL19( ,x, ,y);        // defined in VGA.H--
word GETRETURNCODE();
     GETTEXTPOSITION( ,page);
byte GETVERIFYFLAG();
void GETVGAPALETTE( ,first,numbertoget,buffer);
byte GETVIDEOMODE();          // defined in VIDEO.H--
void GOTOXY(xloc,yloc);       // defined in WRITE.H--
void GWRITE(character,attribute);          // defined in GWRITE.H--
void GWRITEDIGITS(wordvalue,attribute);    // defined in GWRITE.H--
void GWRITEINT(intvalue,attribute);        // defined in GWRITE.H--
void GWRITESTR(stringloc,attribute);       // defined in GWRITE.H--
void GWRITEWORD(wordvalue,attribute);      // defined in GWRITE.H--

void HALT();
void HIDEMOUSE();       // defined in MOUSE.H--

byte  INPORTB( , , ,port);  // defined in PORTS.H--
word  INPORTW( , , ,port);  // defined in PORTS.H--
dword INPORTD( , , ,port);  // defined in PORTS.H--

word KBHIT();
void KEEP( , , ,offset);
byte KEYCHECK();

void line19(x1,y1,x2,y2,colour);   // defined in VGA.H--
void LOAD8X8FONT();
void LOAD8X14FONT();
void LOAD8X16FONT();

void MAXKEYRATE();

void negpixel19(x,y);
void NOSOUND();     // defined in SOUND.H--
void notbar19(x,y,xsize,ysize);       // defined in VGA.H--
void notbox19(x,y,xsize,ysize);       // defined in VGA.H--
void notpixel19(x,y);

word open(filenameoffset,mode);  // description to do
void ORPIXEL19( ,x,colour,y);
void orpixel19(x,y,colour);
void OUTPORTB(value, , ,port);             // defined in PORTS.H--
void OUTPORTW(value, , ,port);             // defined in PORTS.H--
void OUTPORTD(dword dwordvalue, , ,port);  // defined in PORTS.H--
void overicon_320(x,y,imagesegment,imageoffset);    // description to do
void overicon_640(x,y,imagesegment,imageoffset);    // description to do
void overimage19(x,y,imageoffset,clearcolour);

word PARAMCOUNT();          // description to do
word PARAMSTR(strnumber);   // description to do remember BX = AX;
word PASSTR( , , , ,cstringoffset,passtringoffset);
word passtr(cstringoffset,passtringoffset);
void puticon_320(x,y,imagesegment,imageoffset);    // description to do
void puticon_640(x,y,imagesegment,imageoffset);    // description to do
void putimage19(x,y,imageloc);
void PUTPIXEL(colour,page,x,y);
void PUTPIXEL19( ,x,colour,y);
void putpixel19(x,y,colour);      // defined in VGA.H--
void putpixel_320(x,y,colour);    // description to do
void putpixel_640(x,y,colour);    // description to do
void putresized(x,y,xsize,ysize,imageoffset);   // description to do

int  rand();        // defined in RANDOM.H--
void RANDOMIZE();   // defined in RANDOM.H--
word read(filehandle,bufferoffset,bytes);              // defined in FILE.H--
word readfar(filehandle,bufferseg,bufferoffset,bytes); // defined in FILE.H--
word readfile(filename,bufseg,bufoff,bytes);           // defined in FILE.H--
     READSTRING( , , ,string);
void REBOOT();
word RESETMOUSE();      // defined in MOUSE.H--
     RESIZEMEM(segmentaddress,newparagraphsize);    // description to do
void ROMBASIC();

void SETATIMASK( ,readwritemask);
void SETBORDERCOLOR(color);
word SETCURRENTDIR(stringpath);
word SETCURRENTDRIVE(drivecode);
void SETDISPLAYPAGE(page);
void SETINTVECT( ,intnum,segmentvalue,offsetvalue);
void SETMOUSEHANDLE(handlesegment,handleoffset,eventmask); // defined in MOUSE.H--
void SETMOUSEXLIMIT( , ,min,max);   // defined in MOUSE.H--
void SETMOUSEXY( , ,xloc,yloc);     // defined in MOUSE.H--
void SETMOUSEYLIMIT( , ,min,max);   // defined in MOUSE.H--
void SETPANREG( ,value);           // description to do
void SETREADMASK( ,maskvalue);     // description to do   
void SETSCREENOFFSET( ,offset);
void SETSCREENOFFSETM( ,offset);
void SETSCREENWIDTH( ,width/8);    // description to do
void SETTEXTPOSITION( ,page, ,loc);
void SETTICKINTERVAL( ,intervalsize);
void SETVGADAC(first, ,numbertoset, , ,buf);
void SETVGAPALETTE( ,first,numbertoset,buffer);
void SETVIDEOMODE(mode);         // defined in VIDEO.H--
void SETWRITEMASK( ,maskvalue);     // description to do   
word SHIFTSTATUS();
void SHOWMOUSE();          // defined in MOUSE.H--
void SOUND(frequency);     // defined in SOUND.H--
word spawn(filename,parameters,environment);  // defined in DOS.H--
word SQRT(wordvalue);             // defined in MATH.H--
void srand(seedword1,seedword2);  // defined in RANDOM.H--
void strcat(destinationstringoffset,sourcestringoffset);
void STRCAT( , , , ,destinationstringoffset,sourcestringoffset);
char strcmp(string1offset,string2offset);   // description to do
char STRCMP(string1offset,string2offset);   // description to do
void strcpy(deststringoffset,sourcestringoffset);   // description to do
void STRCPY( , , , ,deststringoffset,sourcestringoffset); // description to do
byte strpas(passtringoffset,cstringoffset);
byte STRPAS( , , , ,passtringoffset,cstringoffset);
word strlen(stroffset);
word STRLEN(stroffset);
void swapicon_640(x,y,bufseg,bufoff);  // description to do

byte TEXTROWS();
void trans19(x1,y1,x2,y2);      // defined in VGA.H--
void TURNOFFCHAIN4();

void UNBLANKVGA();

void WARMBOOT();
void WAITVSYNC();
void WINDOWDOWN(numoflines,attribute,upperleftloc,lowerrightloc); // WRITE.H--
void WINDOWUP(numoflines,attribute,upperleftloc,lowerrightloc);   // WRITE.H--
void WORDTODIGITS(number,stringloc);
void WRITE(character);            // defined in WRITE.H--
word write(filehandle,bufferoffset,bytes);              // defined in FILE.H--
word writefar(filehandle,bufferseg,bufferoffset,bytes); // defined in FILE.H--
word writefile(filename,bufseg,bufoff,bytes);           // defined in FILE.H-- 
void WRITEDIGITS(wordvalue);      // defined in WRITE.H--
void WRITEINT(intvalue);          // defined in WRITE.H--
void WRITELN();                   // defined in WRITE.H--
void WRITESTR(stringloc);         // defined in WRITE.H--
void WRITEWORD(wordvalue);        // defined in WRITE.H--

void XLINE19(x,y,length,colour);
word XMSallocateEMB(sizeinK);
word XMSfreeEMB(EMBhandle);
word XMSgetEMBinfo(EMBhandle);
word XMSgetversion();
word XMSglobaldisableA20();
word XMSglobalenableA20();
word XMSlocaldisableA20();
word XMSlocalenableA20();
word XMSlockEMB(EMBhandle);
word XMSmoveEMB(destofshigh,destofslow,desthandle,sourceofshigh,
                sourceofslow,sourcehandle,lengthhigh,lenghtlow);
word XMSqueryA20();
word XMSqueryfreeEMB();
word XMSreallocateEMB(newsize,EMBhandle);
word XMSreleaseHMA();
word XMSreleaseUMB(segmentofUMB);
word XMSrequestHMA(spaceinbytes);
word XMSrequestUMB(sizeinparagraphs);
word XMSunlockEMB(EMBhandle);
void xorbar19(x,y,xsize,ysize,colour);       // defined in VGA.H--
void xorbox19(x,y,xsize,ysize,colour);       // defined in VGA.H--
void xorimage19(x,y,imageoffset);            // defined in VGA.H--
void xorline19(x1,y1,x2,y2,colour);          // defined in VGA.H--
void xorpixel19(x,y,colour);                 // defined in VGA.H--
void XORPIXEL19( ,x,colour,y);               // defined in VGA.H--

void YLINE19(x,y,length,colour);             // defined in VGA.H--

void _andpixel19(x,y,colour);                    // defined in VGA.H--
void _bar19(x,y,xsize,ysize,colour);             // defined in VGA.H--
void _box19(x,y,xsize,ysize,colour);             // defined in VGA.H--
void _getpixel19(x,y);                           // defined in VGA.H--
void _line19(x1,y1,x2,y2,colour);                // defined in VGA.H--
void _negpixel19(x,y);                           // defined in VGA.H--
void _notbar19(x,y,xsize,ysize);                 // defined in VGA.H--
void _notbox19(x,y,xsize,ysize);                 // defined in VGA.H--
void _notpixel19(x,y);                           // defined in VGA.H--
void _orpixel19(x,y,colour);                     // defined in VGA.H--
void _overimage19(x,y,imageoffset,clearcolour);  // defined in VGA.H--
void _putimage19(x,y,imageloc);                  // defined in VGA.H--
void _putpixel19(x,y,colour);                    // defined in VGA.H--
void _putresized19(x,y,xsize,ysize,imageoffset); // defined in VGA.H--
void _xorbar19(x,y,xsize,ysize,colour);          // defined in VGA.H--
void _xorbox19(x,y,xsize,ysize,colour);          // defined in VGA.H--
void _xorimage19(x,y,imageoffset);               // defined in VGA.H--
void _xorline19(x1,y1,x2,y2,colour);             // defined in VGA.H--
void _xorpixel19(x,y,colour);                    // defined in VGA.H--

/* end of ALLPROCS.DOC */